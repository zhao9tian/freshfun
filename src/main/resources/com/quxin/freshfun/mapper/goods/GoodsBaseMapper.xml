<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quxin.freshfun.dao.GoodsBaseMapper">
  <resultMap id="BaseResultMap" type="com.quxin.freshfun.model.pojo.goods.GoodsBasePOJO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="sub_title" jdbcType="VARCHAR" property="subTitle" />
    <result column="des" jdbcType="VARCHAR" property="goodsDes" />
    <result column="shop_price" jdbcType="INTEGER" property="shopPrice" />
    <result column="origin_price" jdbcType="INTEGER" property="originPrice" />
    <result column="cost" jdbcType="INTEGER" property="cost"/>
    <result column="img" jdbcType="VARCHAR" property="goodsImg" />
    <result column="sale_num" jdbcType="INTEGER" property="saleNum" />
    <result column="stock_num" jdbcType="INTEGER" property="stockNum" />
    <result column="is_on_sale" jdbcType="INTEGER" property="isOnSale"/>
    <result column="catagory1" jdbcType="INTEGER" property="catagory1" />
    <result column="catagory2" jdbcType="INTEGER" property="catagory2" />
    <result column="catagory3" jdbcType="INTEGER" property="catagory3" />
    <result column="catagory4" jdbcType="INTEGER" property="catagory4" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="appId" jdbcType="BIGINT" property="appId" />
    <result column="created" jdbcType="BIGINT" property="created" />
    <result column="updated" jdbcType="BIGINT" property="updated" />
  </resultMap>
  <resultMap id="OrderPayInfoResultMap" type="com.quxin.freshfun.model.OrderPayInfo">
      <id column="id" jdbcType="BIGINT" property="goodsId"/>
      <result column="title" jdbcType="VARCHAR" property="goodsName"/>
      <result column="shop_price" jdbcType="INTEGER" property="goodsPrice"/>
  </resultMap>
  <!--根据商品编号查询商品信息-->
  <select id="findGoodsById" parameterType="java.lang.Long" resultType="com.quxin.freshfun.model.pojo.goods.GoodsBasePOJO">
      select `id`,`title`,`des` as `goodsDes`,`sub_title` as `subTitle`,`img` as `goodsImg`,`shop_price` as `shopPrice`,origin_price as `originPrice`,`is_on_sale` as `isOnSale` from goods_base where id = #{goodsId} and is_deleted = 0
  </select>
  <!--根据商品编号查询商品信息-->
  <select id="findGoodsInId" resultMap="BaseResultMap">
        select `id`,`title`,`des`,`sub_title`,`img`,`shop_price`,origin_price,`is_on_sale`
        from goods_base
        where id in
        <foreach collection="array" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        and is_deleted = 0
  </select>
  <select id="findGoodsInList" parameterType="java.util.List" resultMap="BaseResultMap">
      select `id`,`title`,`des`,`sub_title`,`img`,`shop_price`,origin_price,`is_on_sale`
      from goods_base
      where id in
      <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
          #{item.goodsId}
      </foreach>
      and is_deleted = 0
  </select>
  <!--根据优惠商品编号查询商品信息-->
  <select id="findPromotionGoodsList" parameterType="java.util.List" resultMap="BaseResultMap">
      select `id`,`title`,`des`,`sub_title`,`img`,`shop_price`,origin_price,`is_on_sale`
      from goods_base
      where id in
      <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
          #{item.objectId}
      </foreach>
      and is_deleted = 0
  </select>
  <!--查询二级类目下商品-->
  <select id="selectCatagory2Goods" resultMap="BaseResultMap">
    select `id`,`title`,`sub_title`,`img`,`shop_price`,`origin_price` from goods_base where category2 = #{category} and is_on_sale = 1 and is_deleted = 0 order by created DESC limit #{page},#{pageSize}
  </select>

  <!--查询推荐商品-->
  <select id="findRecommendGoods" resultMap="BaseResultMap" >
    select `id`,`title`,`sub_title`,`img`,`shop_price`,`origin_price` from goods_base where created >= ((select max(created) from goods_base)-(select min(created) from goods_base)) * rand() + (select min(created) from goods_base) and is_on_sale = 1 and is_deleted = 0 limit 10
  </select>

  <!--查询更多商品-->
  <select id="selectGoodsList" resultMap="BaseResultMap">
      select `id`,`title`,`sub_title`,`img`,`shop_price`,`origin_price` from goods_base where is_deleted = 0 and is_on_sale = 1 order by created DESC limit #{page},#{pageSize}
  </select>

  <!--根据商品编号查询商品图-->
  <select id="selectGoodsImgByGoodsId" parameterType="java.lang.Long" resultType="com.quxin.freshfun.model.pojo.goods.GoodsImage">
    select `detail_img` as `detailImg`,carousel_img as `carouselImg` from goods_img where goods_id = #{goodsId}
  </select>
  <!--支付查询商品信息-->
  <select id="selectOrderPayInfo" parameterType="java.lang.Long" resultType="com.quxin.freshfun.model.pojo.goods.GoodsBasePOJO">
    select `id`,`title`,`shop_price` as `shopPrice` from goods_base where id = #{goodsId}
  </select>
  <!--根据商品集合信息查询商品信息-->
  <select id="selectGoodsInfoByGoodsList" parameterType="java.util.List" resultMap="OrderPayInfoResultMap">
      select `id`,`title`,`shop_price` from goods_base
      where id IN
      <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
          #{item.goodsId}
      </foreach>
  </select>

  <!--批量查询商品库存-->
  <select id="selectBatchStock" parameterType="java.util.List" resultMap="BaseResultMap">
      SELECT id,stock_num from goods_base where id in
      <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
          #{item.goodsId}
      </foreach>
  </select>

  <!--查询单个库存-->
  <select id="selectStockByGoodsId" parameterType="java.lang.Long" resultType="com.quxin.freshfun.model.pojo.goods.GoodsBasePOJO">
      SELECT `id`,`stock_num` as `stockNum` from goods_base where id = #{goodsId}
  </select>
    
  <!--批量修改库存-->
  <update id="batchAddStock" parameterType="java.util.List">
      update goods_base
          <trim prefix="set" suffixOverrides=",">
              <trim prefix="stock_num =case" suffix="end,">
                  <foreach collection="list" item="i" index="index">
                      when id=#{i.goodsId} then `stock_num`+#{i.count}
                  </foreach>
              </trim>
          </trim>
        WHERE id in
      <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
          #{item.goodsId}
      </foreach>
  </update>
  <!--批量增加库存-->
  <update id="addStock" parameterType="com.quxin.freshfun.model.OrderDetailsPOJO">
      update goods_base set sale_num = sale_num + #{count} where id = #{goodsId}
  </update>

  <!--修改商品库存-->
  <update id="updateGoodsStock" parameterType="java.util.Map" >
      update goods_base set stock_num = stock_num - #{stock} where id = #{goodsId} and stock_num > 0
  </update>
  <!--增加销量-->
  <update id="updateGoodsSaleNum" parameterType="java.lang.Long">
      update goods_base set sale_num = sale_num + 1 where id = #{goodsId}
  </update>
  <!--根据商品编号查询商品信息-->
  <select id="selectGoodsByGoodsId" parameterType="java.lang.Long" resultType="com.quxin.freshfun.model.param.GoodsParam">
      select `id`,`title` as `goodsName`,`cost`,`sub_title` as `goodsDes`,`img` as `goodsImg`,shop_price as `shopPrice`,origin_price as `marketPrice` from goods_base where id = #{goodsId}
  </select>


  <!--查询所欲商品属性-->
  <select id="selectGoodsStandard" parameterType="java.lang.Long" resultType="com.quxin.freshfun.model.pojo.goods.GoodsStandard">
    select  `name`,`brand`,
            `product_place` as `productPlace`,
            `goods_standard` as `goodsStandard`,
            `net_contents` as `netContents`,
            `shelf_life` as `shelfLife`,
            `storage_method` as `storageMethod`,
            `ingredient_list` as `ingredient_list`,
            `is_sugary` as `isSugary`,
            `is_organic` as `isOrganic`,
            `is_imported` as `isImported`,
            `is_box_packed` as `isBoxPacked`,
            `package_component` as `packageComponent`,
            `taste`,
            `facility`,
            `unsuitable`,
            `suitable`,
            `product_form` as `productForm`,
            `food_additives` as `foodAdditives`,
            `set_cycle` as `setCycle`,
            `factory_name` as `factoryName`,
            `factory_site` as `factorySite`,
            `product_standard_num` as `productStandardNum`,
            `fresh_store_temp` as `freshStoreTemp`,
            `proof`,
            `degree`,
            `adaptive_scene` as `adaptiveScene`,
            `packing_method` as `packingMethod`,
            `packing_type` as `packingType`,
            `wine_style` as `wineStyle`,
            `suit_specification` as `suitSpecification`,
            `decante_duration` as `decanteDuration`,
            `particular_year` as `particularYear`,
            `smell`,
            `colour_sort` as `colourSort`,
            `style_type` as `styleType`,
            `size`,
            `specialty`,
            `other` from goods_standard where goods_id = #{goodsId}
  </select>

    <!--查询所有限量购商品信息-->
    <select id="selectAllLimitedNumInfo" parameterType="java.util.List" resultType="com.quxin.freshfun.model.goods.LimitedNumGoodsPOJO">
        select object_id as limitedGoodsId ,  content as limitedGoodsPrice , total_stock as limitedGoodsStock , stock as limitedRealStock from promotion
        where is_deleted = 0 and object_type = 3 and object_id in
        <foreach collection="limitedNumIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!--查询首页限量购商品信息-->
    <select id="selectIndexLimitedNumInfo" parameterType="java.util.List" resultType="com.quxin.freshfun.model.goods.LimitedNumGoodsPOJO">
        select object_id as limitedGoodsId ,  content as limitedGoodsPrice , total_stock as limitedGoodsStock , stock as limitedRealStock from promotion
        where  is_deleted = 0 and stock <![CDATA[>=]]> 0 and object_type = 3 and object_id in
        <foreach collection="limitedNumIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!--查询排序商品信息-->
    <select id="selectGoodsByIds" parameterType="java.util.List" resultType="com.quxin.freshfun.model.pojo.goods.GoodsBasePOJO">
        select id , title , sub_title as subTitle, shop_price as shopPrice , origin_price as originPrice, img as goodsImg from goods_base
        where is_deleted = 0 and id and is_on_sale = 1 and id in
        <foreach collection="limitedNumIds" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

</mapper>