<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quxin.freshfun.dao.GoodsLimitMapper">
  <resultMap id="BaseResultMap" type="com.quxin.freshfun.model.GoodsLimit">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gmt_create" jdbcType="BIGINT" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="BIGINT" property="gmtModified" />
    <result column="start_time" jdbcType="BIGINT" property="startTime" />
    <result column="end_time" jdbcType="BIGINT" property="endTime" />
    <result column="market_price" jdbcType="INTEGER" property="marketPrice" />
    <result column="shop_price" jdbcType="INTEGER" property="shopPrice" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_des" jdbcType="VARCHAR" property="goodsDes" />
    <result column="goods_img" jdbcType="VARCHAR" property="goodsImg" />
    <result column="goods_storage" jdbcType="INTEGER" property="goodsStorage" />
    <result column="is_on_sale" jdbcType="INTEGER" property="isOnSale" />
    <result column="store_id" jdbcType="INTEGER" property="storeId" />
    <result column="merchant_proxy_id" jdbcType="INTEGER" property="merchantProxyId" />
    <result column="limit_count" jdbcType="INTEGER" property="limitCount" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, gmt_create, gmt_modified, start_time, end_time, market_price, shop_price, goods_name, 
    goods_des, goods_img, goods_storage, is_on_sale, store_id, merchant_proxy_id, limit_count
  </sql>
  
  <!-- 查詢商品信息 -->
  <select id="selectShoppingInfo" parameterType="java.lang.Integer" resultType="com.quxin.freshfun.model.GoodsPOJO">
      select shop_price,goods_name from goods_limit where id = #{goodsId}
  </select>
  
  <select id="findIsLimit" resultMap="BaseResultMap" parameterType="java.lang.Long">
      select id, start_time, end_time, market_price, shop_price, goods_name, 
    goods_des, goods_img, goods_storage, is_on_sale, store_id, merchant_proxy_id from goods_limit 
      where #{nowTime} between start_time and end_time and is_on_sale = 1 
        
  </select>
  
  <select id="findGoingLimit" resultMap="BaseResultMap" parameterType="java.lang.Long">
      SELECT id, start_time, end_time, market_price, shop_price, goods_name, 
    goods_des, goods_img, goods_storage, is_on_sale, store_id, merchant_proxy_id FROM goods_limit 
      WHERE #{nowTime}  &lt; start_time ORDER BY end_time DESC LIMIT 1
        
  </select>
  
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
      SELECT id, start_time, end_time, market_price, shop_price, goods_name, 
    goods_des, goods_img, goods_storage, is_on_sale, store_id, merchant_proxy_id FROM goods_limit 
      WHERE id = goodsID
        
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from goods_limit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from goods_limit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.quxin.freshfun.model.GoodsLimit">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into goods_limit (id, gmt_create, gmt_modified, 
      start_time, end_time, market_price, 
      shop_price, goods_name, goods_des, 
      goods_img, goods_storage, is_on_sale, 
      store_id, merchant_proxy_id, limit_count
      )
    values (#{id,jdbcType=INTEGER}, #{gmtCreate,jdbcType=BIGINT}, #{gmtModified,jdbcType=BIGINT},
      #{startTime,jdbcType=BIGINT}, #{endTime,jdbcType=BIGINT}, #{marketPrice,jdbcType=INTEGER},
      #{shopPrice,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, #{goodsDes,jdbcType=VARCHAR},
      #{goodsImg,jdbcType=VARCHAR}, #{goodsStorage,jdbcType=INTEGER}, #{isOnSale,jdbcType=INTEGER},
      #{storeId,jdbcType=INTEGER}, #{merchantProxyId,jdbcType=INTEGER}, #{limitCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.quxin.freshfun.model.GoodsLimit">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into goods_limit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="shopPrice != null">
        shop_price,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsDes != null">
        goods_des,
      </if>
      <if test="goodsImg != null">
        goods_img,
      </if>
      <if test="goodsStorage != null">
        goods_storage,
      </if>
      <if test="isOnSale != null">
        is_on_sale,
      </if>
      <if test="storeId != null">
        store_id,
      </if>
      <if test="merchantProxyId != null">
        merchant_proxy_id,
      </if>
      <if test="limitCount != null">
        limit_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=BIGINT},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=INTEGER},
      </if>
      <if test="shopPrice != null">
        #{shopPrice,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsDes != null">
        #{goodsDes,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null">
        #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsStorage != null">
        #{goodsStorage,jdbcType=INTEGER},
      </if>
      <if test="isOnSale != null">
        #{isOnSale,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        #{storeId,jdbcType=INTEGER},
      </if>
      <if test="merchantProxyId != null">
        #{merchantProxyId,jdbcType=INTEGER},
      </if>
      <if test="limitCount != null">
        #{limitCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.quxin.freshfun.model.GoodsLimit">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update goods_limit
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=BIGINT},
      </if>
      <if test="marketPrice != null">
        market_price = #{marketPrice,jdbcType=INTEGER},
      </if>
      <if test="shopPrice != null">
        shop_price = #{shopPrice,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsDes != null">
        goods_des = #{goodsDes,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null">
        goods_img = #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsStorage != null">
        goods_storage = #{goodsStorage,jdbcType=INTEGER},
      </if>
      <if test="isOnSale != null">
        is_on_sale = #{isOnSale,jdbcType=INTEGER},
      </if>
      <if test="storeId != null">
        store_id = #{storeId,jdbcType=INTEGER},
      </if>
      <if test="merchantProxyId != null">
        merchant_proxy_id = #{merchantProxyId,jdbcType=INTEGER},
      </if>
      <if test="limitCount != null">
        limit_count = #{limitCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quxin.freshfun.model.GoodsLimit">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update goods_limit
    set gmt_create = #{gmtCreate,jdbcType=BIGINT},
      gmt_modified = #{gmtModified,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=BIGINT},
      market_price = #{marketPrice,jdbcType=INTEGER},
      shop_price = #{shopPrice,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_des = #{goodsDes,jdbcType=VARCHAR},
      goods_img = #{goodsImg,jdbcType=VARCHAR},
      goods_storage = #{goodsStorage,jdbcType=INTEGER},
      is_on_sale = #{isOnSale,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=INTEGER},
      merchant_proxy_id = #{merchantProxyId,jdbcType=INTEGER},
      limit_count = #{limitCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>