<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quxin.freshfun.dao.OrdersMapper">
  <resultMap id="BaseResultMap" type="com.quxin.freshfun.model.OrdersPOJO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="order_id"/>
    <result column="gmt_create" jdbcType="BIGINT" property="gmt_create" />
    <result column="gmt_modified" jdbcType="BIGINT" property="gmt_modified" />
    <result column="user_id" jdbcType="BIGINT" property="user_id" />
    <result column="order_count" jdbcType="INTEGER" property="order_count"/>
    <result column="payment_method" jdbcType="INTEGER" property="payment_method" />
    <result column="order_status" jdbcType="TINYINT" property="order_status" />
    <result column="pay_status" jdbcType="TINYINT" property="pay_status" />
    <result column="user_red_id" jdbcType="VARCHAR" property="user_red_id" />
    <result column="actual_price" jdbcType="INTEGER" property="actual_price" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="is_deleted" jdbcType="INTEGER" property="is_deleted" />
    <result column="reserved_field" jdbcType="VARCHAR" property="reserved_field" />
    <result column="is_limit" jdbcType="INTEGER" property="is_limit" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, order_id, gmt_create, gmt_modified, user_id,payment_method, order_status,pay_status,user_red_id, actual_price, code,
     actual_price, code, is_deleted, reserved_field
  </sql>
  <!-- 查询所有订单 -->
  <select id="findAllOrders" resultMap="BaseResultMap">
      select id,order_status,pay_status,user_red_id,actual_price from orders where is_deleted = 0
  </select>
  <!-- 根据用户编号分页查询所有订单 -->
  <select id="selectPagingByUserId" parameterType="hashmap" resultMap="BaseResultMap">
      select id,order_status,pay_status,user_red_id,actual_price from orders limit #{currentPage},#{pageSize} where user_id = #{userId} and is_deleted = 0
  </select>
  <!-- 查询d=待付款订单 -->
  <select id="selectObligation" parameterType="java.lang.Integer" resultMap="BaseResultMap">
      select id,order_status,pay_status,user_red_id,actual_price from orders where user_id = #{userId} and order_status = 0 and is_deleted = 0 
  </select>
  <!-- 查询待发货订单 -->
  
  <!-- 待收货 -->
  
  <!-- 待评价 -->
  
  <!-- 评价 -->
  
  <!-- 删除一条订单信息 -->
  <update id="delOrder" useGeneratedKeys="true" keyProperty="id" parameterType="java.lang.Integer">
      update orders set is_deleted = 1 where id = #{orderId}
  </update>
  <!-- 修改订单状态为已支付 -->
  <update id="updateOrderPayStatus" useGeneratedKeys="true" keyProperty="id" parameterType="java.lang.Integer">
      update orders set pay_status = 1 where id = #{orderId}
  </update>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from orders
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.quxin.freshfun.model.OrdersPOJO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into orders (id, gmt_create, gmt_modified, 
      user_id, goods_id, address_id, 
      delivery_type, payment_method, order_status, 
      refund_status, pay_status, comfirm_status, 
      discount_type, origin_price, user_red_id, 
      actual_price, code)
    values (#{id,jdbcType=INTEGER}, #{gmt_create,jdbcType=BIGINT}, #{gmt_modified,jdbcType=BIGINT}, 
      #{user_id,jdbcType=INTEGER}, #{goods_id,jdbcType=INTEGER}, #{address_id,jdbcType=INTEGER}, 
      #{delivery_type,jdbcType=TINYINT}, #{payment_method,jdbcType=TINYINT}, #{order_status,jdbcType=TINYINT}, 
      #{refund_status,jdbcType=TINYINT}, #{pay_status,jdbcType=TINYINT}, #{comfirm_status,jdbcType=TINYINT}, 
      #{discount_type,jdbcType=TINYINT}, #{origin_price,jdbcType=INTEGER}, #{user_red_id,jdbcType=TINYINT}, 
      #{actual_price,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR})
      discount_type, origin_price, is_used_red_pocket, 
      actual_price, code, shopping_fee_status, 
      is_deleted, reserved_field)
    values (#{id,jdbcType=INTEGER}, #{gmt_create,jdbcType=BIGINT}, #{gmt_modified,jdbcType=BIGINT}, 
      #{user_id,jdbcType=INTEGER}, #{goods_id,jdbcType=INTEGER}, #{address_id,jdbcType=VARCHAR}, 
      #{delivery_type,jdbcType=TINYINT}, #{payment_method,jdbcType=TINYINT}, #{order_status,jdbcType=TINYINT}, 
      #{refund_status,jdbcType=TINYINT}, #{pay_status,jdbcType=TINYINT}, #{comfirm_status,jdbcType=TINYINT}, 
      #{discount_type,jdbcType=TINYINT}, #{origin_price,jdbcType=INTEGER}, #{is_used_red_pocket,jdbcType=TINYINT}, 
      #{actual_price,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{shopping_fee_status,jdbcType=TINYINT}, 
      #{is_deleted,jdbcType=TINYINT}, #{reserved_field,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.quxin.freshfun.model.OrdersPOJO">
   
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      order_id,
      <if test="gmt_create != null">
        gmt_create,
      </if>
      <if test="gmt_modified != null">
        gmt_modified,
      </if>
      <if test="user_id != null">
        user_id,
      </if>
      
      <if test="payment_method != null">
        payment_method,
      </if>
      <if test="order_status != null">
        order_status,
      </if>
      
      <if test="is_limit != null">
        is_limit,
      </if>
      
      <if test="pay_status != null">
        pay_status,
      </if>
      <if test="user_red_id != null">
        user_red_id,
      </if>
      <if test="actual_price != null">
        actual_price,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="is_deleted != null">
        is_deleted,
      </if>
      <if test="reserved_field != null">
        reserved_field,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      #{order_id},
      <if test="gmt_create != null">
        #{gmt_create,jdbcType=BIGINT},
      </if>
      <if test="gmt_modified != null">
        #{gmt_modified,jdbcType=BIGINT},
      </if>
      <if test="user_id != null">
        #{user_id,jdbcType=INTEGER},
      </if>
      <if test="payment_method != null">
        #{payment_method,jdbcType=TINYINT},
      </if>
      <if test="order_status != null">
        #{order_status,jdbcType=TINYINT},
      </if>
      <if test="pay_status != null">
        #{pay_status,jdbcType=TINYINT},
      </if>
      <if test="user_red_id != null">
        #{user_red_id,jdbcType=TINYINT},
      </if>
      <if test="actual_price != null">
        #{actual_price,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="is_deleted != null">
        #{is_deleted,jdbcType=TINYINT},
      </if>
      <if test="reserved_field != null">
        #{reserved_field,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.quxin.freshfun.model.OrdersPOJO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update orders
    <set>
      <if test="gmt_create != null">
        gmt_create = #{gmt_create,jdbcType=BIGINT},
      </if>
      <if test="gmt_modified != null">
        gmt_modified = #{gmt_modified,jdbcType=BIGINT},
      </if>
      <if test="user_id != null">
        user_id = #{user_id,jdbcType=INTEGER},
      </if>
      <if test="payment_method != null">
        payment_method = #{payment_method,jdbcType=TINYINT},
      </if>
      <if test="order_status != null">
        order_status = #{order_status,jdbcType=TINYINT},
      </if>
      <if test="pay_status != null">
        pay_status = #{pay_status,jdbcType=TINYINT},
      </if>
      <if test="user_red_id != null">
        user_red_id = #{user_red_id,jdbcType=TINYINT},
      </if>
      <if test="actual_price != null">
        actual_price = #{actual_price,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="is_deleted != null">
        is_deleted = #{is_deleted,jdbcType=TINYINT},
      </if>
      <if test="reserved_field != null">
        reserved_field = #{reserved_field,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quxin.freshfun.model.OrdersPOJO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update orders
    set gmt_create = #{gmt_create,jdbcType=BIGINT},
      gmt_modified = #{gmt_modified,jdbcType=BIGINT},
      user_id = #{user_id,jdbcType=INTEGER},
      payment_method = #{payment_method,jdbcType=TINYINT},
      order_status = #{order_status,jdbcType=TINYINT},
      pay_status = #{pay_status,jdbcType=TINYINT},
      user_red_id = #{user_red_id,jdbcType=TINYINT},
      actual_price = #{actual_price,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR}
      is_deleted = #{is_deleted,jdbcType=TINYINT},
      reserved_field = #{reserved_field,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>