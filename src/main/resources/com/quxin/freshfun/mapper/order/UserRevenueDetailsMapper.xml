<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.quxin.freshfun.dao.UserRevenueDetailsMapper">
  <resultMap id="BaseResultMap" type="com.quxin.freshfun.model.UserRevenueDetails">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_revenue_id" jdbcType="INTEGER" property="userRevenueId" />
    <result column="order_info_id" jdbcType="INTEGER" property="orderInfoId" />
    <result column="revenue_detail_price" jdbcType="INTEGER" property="revenueDetailPrice" />
    <result column="create_date" jdbcType="BIGINT" property="createDate" />
    <result column="update_date" jdbcType="BIGINT" property="updateDate" />
    <result column="revenue_type" jdbcType="INTEGER" property="revenueType" />
    <result column="is_delete" jdbcType="INTEGER" property="isDelete" />
    <result column="reset" jdbcType="VARCHAR" property="reset" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_revenue_id, order_info_id, revenue_detail_price, create_date, update_date, 
    revenue_type, is_delete, reset
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from user_revenue_details
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user_revenue_details
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.quxin.freshfun.model.UserRevenueDetails">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_revenue_details (id, user_revenue_id, order_info_id, 
      revenue_detail_price, create_date, update_date, 
      revenue_type, is_delete, reset
      )
    values (#{id,jdbcType=INTEGER}, #{userRevenueId,jdbcType=INTEGER}, #{orderInfoId,jdbcType=INTEGER},
      #{revenueDetailPrice,jdbcType=INTEGER}, #{createDate,jdbcType=BIGINT}, #{updateDate,jdbcType=BIGINT},
      #{revenueType,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}, #{reset,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.quxin.freshfun.model.UserRevenueDetails">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into user_revenue_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="userRevenueId != null">
        user_revenue_id,
      </if>
      <if test="orderInfoId != null">
        order_info_id,
      </if>
      <if test="revenueDetailPrice != null">
        revenue_detail_price,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="revenueType != null">
        revenue_type,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="reset != null">
        reset,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="userRevenueId != null">
        #{userRevenueId,jdbcType=INTEGER},
      </if>
      <if test="orderInfoId != null">
        #{orderInfoId,jdbcType=INTEGER},
      </if>
      <if test="revenueDetailPrice != null">
        #{revenueDetailPrice,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="revenueType != null">
        #{revenueType,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="reset != null">
        #{reset,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.quxin.freshfun.model.UserRevenueDetails">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_revenue_details
    <set>
      <if test="userRevenueId != null">
        user_revenue_id = #{userRevenueId,jdbcType=INTEGER},
      </if>
      <if test="orderInfoId != null">
        order_info_id = #{orderInfoId,jdbcType=INTEGER},
      </if>
      <if test="revenueDetailPrice != null">
        revenue_detail_price = #{revenueDetailPrice,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=BIGINT},
      </if>
      <if test="revenueType != null">
        revenue_type = #{revenueType,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="reset != null">
        reset = #{reset,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.quxin.freshfun.model.UserRevenueDetails">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user_revenue_details
    set user_revenue_id = #{userRevenueId,jdbcType=INTEGER},
      order_info_id = #{orderInfoId,jdbcType=INTEGER},
      revenue_detail_price = #{revenueFetailPrice,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=BIGINT},
      revenue_type = #{revenueType,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      reset = #{reset,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>