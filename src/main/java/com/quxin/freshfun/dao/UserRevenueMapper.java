package com.quxin.freshfun.dao;

import java.util.List;

import com.quxin.freshfun.model.UserRevenue;

public interface UserRevenueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_revenue
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_revenue
     *
     * @mbggenerated
     */
    int insert(UserRevenue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_revenue
     *
     * @mbggenerated
     */
    int insertSelective(UserRevenue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_revenue
     *
     * @mbggenerated
     */
    UserRevenue selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_revenue
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(UserRevenue record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_revenue
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(UserRevenue record);
    /**
     * 查询可提现金额
     * @param userId
     * @return
     */
    int selectExtractMoney(Long userId);
    /**
     * 累计收入金额
     * @param userId
     * @return
     */
    int selectCumulativeMoney(Long userId);
    /**
     * 未入账金额
     * @param userId
     * @return
     */
    int selectRreezeMoney(Long userId);
    /**
     * 查询收入账单
     * @param userId
     * @return
     */
    List<UserRevenue> selectRevenueBill(Long userId);
    /**
     * 查詢可提現金額詳情
     * @return
     */
    List<UserRevenue> selectExtractDetails(Long userId);
    /**
     * 查詢累計收入詳情
     * @param userId
     * @return
     */
    List<UserRevenue> selectCumulativeDetails(Long userId);
    /**
     * 根据用户查询收入账单
     * @param userId
     * @return
     */
    List<UserRevenue> selectRreezeMoneyDetails(Long userId);

    /**
     * 根据订单编号查询账单编号
     * @param orderId
     * @return
     */
    List<Integer> selectIdByOrderId(String orderId);

    /**
     * 根据账单编号修改账单状态
     * @return
     */
    Integer updateBillPayStatus(Integer id);

    /**
     * 查询代理商户的总收益
     * @param userId
     * @return
     */
    Integer selectAgentsIncome(Long userId);

    /**
     * 代理商户的未入账收益
     * @param userId
     * @return
     */
    int selectAgentsRreezeMoney(Long userId);

    /**
     * 查询代理商户可提现金额
     * @param userId
     * @return
     */
    int selectAgentExtractMoney(Long userId);
}