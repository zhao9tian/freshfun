package com.quxin.freshfun.dao;

import java.util.List;
import java.util.Map;

import com.quxin.freshfun.model.GoodsPOJO;
import org.apache.ibatis.annotations.Param;

public interface GoodsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods
     *
     * @mbggenerated
     */
    int insert(GoodsPOJO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods
     *
     * @mbggenerated
     */
    int insertSelective(GoodsPOJO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods
     *
     * @mbggenerated
     */
    GoodsPOJO selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(GoodsPOJO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table goods
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(GoodsPOJO record);
    /**
     * 根据商品编号查询商户信息
     * @param goodsId
     * @return
     */
    GoodsPOJO selectMerchantByGoodsId(Integer goodsId);
    
    /**
     * 查询所有商品
     * @return
     */
    List<GoodsPOJO> findByLimit(Map<String, Integer> goodsMap);

    /**
     * 查询所有商品
     * @return
     */
    List<GoodsPOJO> findByLimitOfB(Map<String, Integer> goodsMap);
    
    
    /**
     * 查询单个商品
     * @return
     */
    GoodsPOJO findByGoodsId(Integer goodsId);
    /**
     * 查询单个商品信息
     * @param goodsId
     * @return
     */
    GoodsPOJO selectGoodsById(Integer goodsId);
    /**
     * 根据商品编号查询代理商户信息
     * @param goodsId
     * @return
     */
    GoodsPOJO selectProxyMerchantByGoodsId(Integer goodsId);
    /**
     * 查询推荐商品
     * @return
     */
    List<GoodsPOJO> selectRecommendGoods();
    /**
     * 查询单个商品信息
     * @param goodsId
     * @return
     */
    GoodsPOJO selectShoppingInfo(Integer goodsId);
    /**
     * 查询类别查询精选大图
     * @param goodsId
     * @return
     */
    GoodsPOJO findByType(Integer goodsId);

    /**
     * 根据代理商户ID查询代理的商品信息
     *
     * @param map
     * @return
     */
    List<GoodsPOJO> findProxyGoods(Map<String,Object> map);

    /**
     * 修改商品代理状态
     * @param userId
     * @param goodsId
     * @return
     */
    int updateGoodsAgent(@Param("userId") Long userId,@Param("goodsId") Integer goodsId);
}