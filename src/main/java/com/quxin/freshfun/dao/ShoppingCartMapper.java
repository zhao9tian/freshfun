package com.quxin.freshfun.dao;

import java.util.List;

import com.quxin.freshfun.model.GoodsInfo;
import com.quxin.freshfun.model.OrderPayInfo;
import org.apache.ibatis.annotations.Param;

import com.quxin.freshfun.model.ShoppingCartPOJO;

public interface ShoppingCartMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shopping_cart
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer scId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shopping_cart
     *
     * @mbggenerated
     */
    int insert(ShoppingCartPOJO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shopping_cart
     *
     * @mbggenerated
     */
    int insertSelective(ShoppingCartPOJO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shopping_cart
     *
     * @mbggenerated
     */
    ShoppingCartPOJO selectByPrimaryKey(Integer scId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shopping_cart
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(ShoppingCartPOJO record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table shopping_cart
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(ShoppingCartPOJO record);
    /**
     * 根据用户编号查询购物车信息
     * @param userId
     * @return
     */
    List<ShoppingCartPOJO> selectShoppingCartByUserId(Long userId);
    /**
     * 查询已存在订单
     * @return
     */
    List<Integer> selectExistedOrder(@Param("userId") Long userId,@Param("goodsId") Integer goodsId);
    /**
     * 查询购物车信息
     * @param scId
     * @return
     */
    ShoppingCartPOJO selectShoppingCart(Integer scId);
    /**
     * 批量查询购物车信息
     * @return
     */
    List<OrderPayInfo> selectShoppingCartByList(List<GoodsInfo> goodsInfo);
    /**
     * 查询商品数量
     * @return
     */
    Integer selectGoodsTotals(Integer scId);
    /**
     * 添加商品数量
     * @param scId
     * @return
     */
    Integer addGoodsTotals(Integer scId);
    /**
     * 减少商品数量
     * @param scId
     * @return
     */
    Integer reduceGoodsTotals(Integer scId);
    /**
     * 修改购物车支付状态
     * @param scId
     * @return
     */
    Integer updateOrderPayStatus(Integer scId);
    /**
     * 刪除訂單
     * @param scId
     * @return
     */
    Integer delShoppingCartOrder(@Param("scId") Integer scId,@Param("date") Long date);
}
